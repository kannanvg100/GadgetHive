{{> navbar}}
<br>
<div class="container">
    <p class="h5">Shopping Bag
        <span class=" text-muted">&nbsp;(</span>
        <span class=" text-muted cart-items-count">{{size items}}</span>
        <span class=" text-muted">&nbsp;items)</span>
    </p>
    {{#if (isNull items)}}
    <div class="text-center">
        <p class="mt-5 mb-3">There is nothing in your bag, add some items.</p>
        <a href="/">
            <span class="btn-1">Go to Home</span>
        </a>
    </div>
    {{else}}
    <div class="row">
        <div class="col-12 col-lg-8 mt-3">
            <div class="bg-off-white border-0 rounded">
                {{#each items}}
                {{> cart-item item = this index = @index}}
                {{/each}}
            </div>
        </div>
        <div class="col-12 col-lg-4 mt-3">
            <div class="bg-off-white rounded p-3">
                <p class="h6">Deliver to:</p>
                <p class="span mt-1">{{address.name}}</p>
                <p class="span">{{address.streetName}}</p>
                <p class="span">{{address.town}}</p>
                <span class="span float-start">Ph: +{{address.phone}}</span>
                <a class="span text-blue float-end fw-bold cursor-pointer">CHANGE</a>
                <div class="clearfix"></div>
            </div>
            <div class="bg-off-white rounded mt-3 p-3">
                <p class="h6">Price Details:</p>
                <span id="address-id" data-id={{address._id}}></span>
                <div class="mt-1">
                    <span class="float-start">Price</span>
                    <span id="total-mrp" class="float-end"></span>
                    <div class="clearfix"></div>
                </div>
                <div>
                    <span class="float-start">Discount</span>
                    <span id="total-discount" class="float-end"></span>
                    <div class="clearfix"></div>
                </div>
                <div>
                    <span class="float-start">Delivery Charges</span>
                    <span class="float-end">Free</span>
                    <div class="clearfix"></div>
                </div>
                <div class="mt-1">
                    <span class="float-start fw-bold">Total Amount</span>
                    <span id="total-amount" class="float-end fw-bold"></span>
                    <div class="clearfix"></div>
                </div>
            </div>
            <div class="bg-off-white rounded mt-3 p-3">
                <p class="h6">Payment Options:</p>
                <div class="d-flex gap-2">
                    <input type="radio" id="option1" name="payment-options" value="COD" checked>
                    <label for="option1"><span>Cash on Delivery</span></label><br>
                </div>

                <div class="d-flex gap-2">
                    <input type="radio" id="option2" name="payment-options" value="RAZORPAY">
                    <label for="option2"><span>Razorpay</span></label><br>
                </div>

                <div class="d-flex gap-2">
                    <input type="radio" id="option3" name="payment-options" value="PAYPAL">
                    <label for="option3"><span>Paypal</span></label><br>
                </div>
            </div>
            <div class="mt-3 text-end">
                <span class="btn-1 ms-2" id="checkout-now">PROCEED&nbsp;TO&nbsp;CHECKOUT</span>
            </div>
        </div>
    </div>
    {{/if}}
</div>

<div class="text-center mt-5 ms-5">

</div>
</div>

{{> footer}}

<script>
    const deleteBtns = document.querySelectorAll(".delete-btn")
    let currItemId = ""
    let currTarget = ""
    deleteBtns.forEach(item => {
        item.addEventListener("click", (e) => {
            currItemId = e.target.getAttribute('data-id')
            currTarget = e.target
            openModal("Remove Item?", "Are you sure to delete the item?", "Remove")
        })
    })
    confirmButton.addEventListener('click', (e) => {
        fetch(`/cart/delete/`, {
            method: "DELETE",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ id: currItemId }),
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    const cartItemsCount = document.querySelector(".cart-items-count")
                    const count = Number(cartItemsCount.innerHTML)
                    cartItemsCount.innerHTML = count - 1
                    currTarget.closest('.cart-item-parent').remove()
                    showToast("product removed from Bag")
                    updatePricePanel()
                } else {
                    showToast(data.message)
                }
            })
            .catch(error => {
                showToast("Something went wrong")
            })
        closeModal()
    })

    const totalMrpSpan = document.querySelector("#total-mrp")
    const totalDiscountSpan = document.querySelector("#total-discount")
    const totalAmountSpan = document.querySelector("#total-amount")

    function updatePricePanel() {
        try {
            const items = document.querySelectorAll(".cart-item")
            let totalMrp = 0
            let totalPrice = 0
            items.forEach(item => {
                const mrp = item.querySelector("#product-mrp").getAttribute('data-mrp');
                const qty = item.querySelector(".quantity-selector").getAttribute('data-qty');
                const price = item.querySelector("#product-price").getAttribute('data-price');

                totalMrp += Number(mrp) * Number(qty);
                totalPrice += Number(price) * Number(qty);
            })
            totalMrpSpan.innerHTML = '₹' + totalMrp.toLocaleString()
            totalDiscountSpan.innerHTML = '₹' + (totalMrp - totalPrice).toLocaleString()
            totalAmountSpan.innerHTML = '₹' + totalPrice.toLocaleString()
            if (totalMrp === 0) window.location.reload()
        }
        catch (error) {

        }
    }
    updatePricePanel()

    const buyBtn = document.querySelector("#checkout-now")
    buyBtn.addEventListener("click", () => {
        const addressId = document.querySelector("#address-id").getAttribute('data-id');
        const paymentType = document.querySelector('input[name="payment-options"]:checked').value
        fetch(`/cart/checkout`, {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
            },
            body: JSON.stringify({ addressId , paymentType}),
        })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    window.location = "/orders/p/1"
                } else {
                    showToast(data.message)
                }
            })
            .catch(error => {
                showToast("Something went wrong")
            })

    })

</script>

<script>

    const dropdownToggle = document.querySelectorAll('.dropdown-toggle');

    let currItemId2 = ""
    let currTarget2 = ""
    dropdownToggle.forEach(item => {
        const parent = item.parentNode
        const selectedQuantity = parent.querySelector('.selected-quantity');
        const dropDownMenu = parent.querySelector('.dropdown-menu')
        item.addEventListener('click', () => {
            currItemId2 = parent.getAttribute('data-id');
            currTarget2 = dropDownMenu
            dropDownMenu.classList.toggle('show');
        })
        const dropdownItems = dropDownMenu.querySelectorAll('.dropdown-item');
        dropdownItems.forEach(menuItem => {
            menuItem.addEventListener('click', () => {
                const selectedValue = menuItem.textContent;
                currTarget2.parentNode.setAttribute('data-qty', selectedValue);
                selectedQuantity.textContent = selectedValue;
                currTarget2.classList.remove('show');
                const grandParent = currTarget2.closest('.cart-item')
                const priceSpan = grandParent.querySelector('#product-price')
                const unitPrice = priceSpan.getAttribute('data-price')
                priceSpan.textContent = "₹" + (unitPrice * selectedValue).toLocaleString()

                fetch(`/cart/update-qty/`, {
                    method: "PATCH",
                    headers: {
                        "Content-Type": "application/json",
                    },
                    body: JSON.stringify({ productId: currItemId2, quantity: selectedValue }),
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            updatePricePanel()
                        } else {
                            showToast(data.message)
                        }
                    })
                    .catch(error => {
                        showToast("Something went wrong")
                    })
            });
        });
    });



    {{!-- window.addEventListener('click', (event) => {
        if (!dropdownToggle.contains(event.target) && !dropdownMenu.contains(event.target)) {
            dropdownMenu.classList.remove('show');
            dropdownToggle.setAttribute('aria-expanded', false);
        }
    }); --}}



</script>