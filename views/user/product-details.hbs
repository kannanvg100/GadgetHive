{{> navbar}}
{{> categories categories = categories}}
{{> breadcrumbs path = path}}

<div class="container mt-3">
    <div class="row">
        <div class="col-lg-auto mb-3">
            {{> image-carousel images = product.images}}
        </div>

        <div class="col-12 col-lg-6">

            <span class="h5">{{product.title}}</span>
            <p class="item-price m-0 mt-2 fw-bold">{{formatPrice product.price}}<span
                    class="text-decoration-line-through text-muted ms-2 item-mrp">{{formatPrice
                    product.mrp}}</span><span class="ms-2" style="font-size: 14px;">{{getDiscountPercentage
                    product.price product.mrp}}% off</span></p>
            <p class="m-0">inclusive of all taxes</p>


            {{!-- Varients --}}
            <div class="d-flex mt-5 w-75 flex-wrap gap-4">
                {{#unless (eq product.memory 'Not Specified')}}
                <div class="me-4">
                    <span class="m-0 fw-bold mb-2">RAM</span>
                    <div class="d-flex gap-2">
                        <span class="m-0 fw-semibold bg-off-white border border-2 rounded px-3 py-1 border-primary">
                            {{product.memory}}</span>
                    </div>
                </div>
                {{/unless}}
                <div class="me-4">
                    <span class="m-0 fw-bold mb-2">STORAGE</span>
                    <div class="d-flex gap-2">
                        <span class="m-0 fw-semibold bg-off-white border border-2 rounded px-3 py-1 border-primary">
                            {{product.storage}}</span>
                    </div>
                </div>
                <div class="me-4">
                    <span class="m-0 fw-bold mb-2">COLOUR</span>
                    <div class="d-flex gap-2">
                        <span class="m-0 fw-semibold bg-off-white border border-2 rounded px-3 py-1 border-primary">
                            {{product.color}}</span>
                    </div>
                </div>
            </div>

            {{!-- Qty and Buy Button --}}
            <div class="d-flex gap-3 mt-5 align-items-center">
                <span class="fw-bold">QUANTITY</span>
                <div class="d-flex border border-1 rounded-circle justify-content-center align-items-center inactive"
                    style="width: 24px; height: 24px; color: red !important;" id="dec-btn">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M15 6L9 12L15 18" stroke="currentColor" stroke-width="2" />
                    </svg>
                </div>
                <span class="" id="displayCount">1</span>
                <div class="d-flex border border-1 rounded-circle justify-content-center align-items-center"
                    style="width: 24px; height: 24px;" id="inc-btn">
                    <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M9 6L15 12L9 18" stroke="#33363F" stroke-width="2" />
                    </svg>
                </div>
                {{#if product.stock}}
                <span class="btn-1 ms-2" id="add-to-cart">ADD TO BAG</span>
                {{else}}
                <span class="btn-5 fw-semibold ms-2">NOT IN STOCK</span>
                {{/if}}
            </div>

            <div class="d-flex align-items-center gap-2 mt-5">
                <img src="/assets/{{product.brand.image}}" alt="" class="brand-logo">
                <span>1 Year Domestic Warranty</span>
            </div>

            {{!-- Description --}}
            {{#unless (eq product.description '')}}
            <div class="mt-5">
                <span class="fw-bold">DESCRIPTION</span>
                <p class="text-justify">{{product.description}}</p>
            </div>
            {{/unless}}

            {{!-- Specifications --}}
            <div class="mt-5">
                <span class="fw-bold">HIGHLIGHTS</span>
                <ul>
                    <li>Colour: {{product.color}}</li>
                    <li>Configuration: {{#unless (eq product.memory 'Not Specified')}} {{product.memory}} RAM | {{/unless}}{{product.storage}} ROM</li>
                    <li>Operating system: {{product.os}}</li>
                </ul>
            </div>
        </div>
    </div>
</div>

{{> footer}}

<style>
    #displayCount {
        width: 20px;
        text-align: center;
        font-size: 16px;
    }
    .brand-logo {
        height: 20px;
        width: 60px;
        object-fit: cover;
        border-radius: 3px;
    }
</style>

<script>
    const displayCount = document.querySelector("#displayCount")
    const decBtn = document.querySelector("#dec-btn")
    const incBtn = document.querySelector("#inc-btn")
    const addToCart = document.querySelector("#add-to-cart")

    incBtn.addEventListener("click", () => {
        if({{product.stock}} == 0) return Toastify({ text: "Product not in stock, Pls check again later" }).showToast();
        if (displayCount.innerText >= {{product.stock}})
            return Toastify({ text: "Only limited quanities are available" }).showToast();
        if (displayCount.innerText < 10) displayCount.innerText++
        else Toastify({ text: "Maximum 10 quantities are allowed" }).showToast();
    })

    decBtn.addEventListener("click", () => {
        if (displayCount.innerText > 1) displayCount.innerText--
    })

    addToCart.addEventListener("click", () => {
        document.documentElement.style.cursor = 'wait';
        fetch("/cart/add", {
            method: "POST",
            headers: {
                "Content-Type": "application/json",
                'X-Requested-With': 'XMLHttpRequest'
            },
            body: JSON.stringify({
                productId: "{{{ product._id }}}",
                quantity: displayCount.innerText
            }),
        })
            .then(response => response.json())
            .then(data => {
                document.documentElement.style.cursor = 'default';
                if (data.success) {
                    Toastify({
                        text: "Product added to bag",
                        destination: '/cart',
                        style: {
                            background: "#468B97",
                        },
                    }).showToast();
                    updateHeader()
                } else {
                    Toastify({ text: data.message }).showToast();
                }
            })
            .catch(error => {
                document.documentElement.style.cursor = 'default';
                Toastify({ text: "Sorry, something went wrong" }).showToast();
            })
    })

</script>